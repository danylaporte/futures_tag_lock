var N=null,E="",T="t",U="u",searchIndex={};
var R=["A `Future` representing a pending `RwLock` shared…","versiontag","result","try_from","try_into","borrow_mut","borrow","type_id","typeid","into_future","set_tag","deref_mut","RwLockWriteGuard","Untagged","RwLockReadFut","RwLockReadGuard","RwLockReadInitFut","RwLockReadInitGuard","RwLockWriteFut","RwLockWriteInitFut"];

searchIndex["futures_tag_locks"]={"doc":E,"i":[[3,R[14],"futures_tag_locks",R[0],N,N],[3,R[15],E,"An RAII guard, much like `std::sync::RwLockReadGuard`. The…",N,N],[3,"RwLock",E,"A Futures-aware RwLock.",N,N],[3,R[16],E,E,N,N],[3,R[17],E,R[0],N,N],[3,R[18],E,E,N,N],[3,R[12],E,"An RAII guard, much like `std::sync::RwLockWriteGuard`.…",N,N],[3,R[19],E,E,N,N],[3,"Tagged",E,"A wrapper class that handle the version tag and the value.",N,N],[3,R[13],E,E,N,N],[11,"new",E,"Create a new `RwLock` in the unlocked state.",0,[[[T]],["self"]]],[11,"read",E,"Acquire the `RwLock` in read-only.",0,[[["self"]],["rwlockreadfut"]]],[11,"write",E,"Acquire the `RwLock` in exclusive read-write mode.",0,[[["self"]],["rwlockwritefut"]]],[11,"read_or_init",E,E,0,[[["self"],["f"]],["rwlockreadinitfut"]]],[11,"write_or_init",E,E,0,[[["self"],["f"]],["rwlockwriteinitfut"]]],[11,"new_tag",E,E,1,[[["self"]],[R[1]]]],[11,"new",E,E,2,[[[T]],["self"]]],[11,"tag",E,E,2,[[["self"]],[R[1]]]],[11,"new",E,E,3,[[[T]],["self"]]],[8,"SetTag",E,E,N,N],[10,R[10],E,E,4,[[["self"],[R[1]]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,R[9],E,E,5,[[],["f"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,"to_owned",E,E,0,[[["self"]],[T]]],[11,"clone_into",E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[3],E,E,7,[[[U]],[R[2]]]],[11,R[4],E,E,7,[[],[R[2]]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[R[8]]]],[11,R[9],E,E,7,[[],["f"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[3],E,E,8,[[[U]],[R[2]]]],[11,R[4],E,E,8,[[],[R[2]]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[R[8]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[3],E,E,9,[[[U]],[R[2]]]],[11,R[4],E,E,9,[[],[R[2]]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[R[8]]]],[11,R[9],E,E,9,[[],["f"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[3],E,E,10,[[[U]],[R[2]]]],[11,R[4],E,E,10,[[],[R[2]]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[R[8]]]],[11,R[9],E,E,10,[[],["f"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"poll",E,E,5,[[["self"]],[["async"],[R[2],["async"]]]]],[11,"deref",E,E,6,[[["self"]],[T]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,R[10],E,E,2,[[["self"],[R[1]]]]],[11,R[10],E,E,3,[[["self"],[R[1]]]]],[11,"default",E,E,0,[[],["self"]]],[11,"clone",E,E,0,[[["self"]],["self"]]],[11,"drop",E,E,1,[[["self"]]]],[11,"deref",E,E,8,[[["self"]]]],[11,"deref",E,E,1,[[["self"]]]],[11,"deref",E,E,2,[[["self"]]]],[11,"deref",E,E,3,[[["self"]]]],[11,R[11],E,E,1,[[["self"]]]],[11,R[11],E,E,2,[[["self"]]]],[11,R[11],E,E,3,[[["self"]]]],[11,"poll",E,E,7,[[["self"]],["poll"]]],[11,"poll",E,E,9,[[["self"]],["poll"]]],[11,"poll",E,E,10,[[["self"]],["poll"]]]],"p":[[3,"RwLock"],[3,R[12]],[3,"Tagged"],[3,R[13]],[8,"SetTag"],[3,R[14]],[3,R[15]],[3,R[16]],[3,R[17]],[3,R[18]],[3,R[19]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);